
name: .e2e

env:
  GITHUB_USER: "houdini91" # TODO CHANGE TO A SCRIBE USER.
  RELEASE_ARTIFACTORY_USERNAME: mikey@scribesecurity.com
  ARTIFACTORY_URL: "https://scribesecuriy.jfrog.io"
  GOPRIVATE: "github.com/scribe-security/*"
  GO_VERSION: "1.21"
  SCRIBE_OCI_REPO: scribesecuriy.jfrog.io/scribe-docker-local/attestation/e2e

on:
  workflow_call:
    secrets:
      RELEASE_GITHUB_TOKEN:
        required: true
      RELEASE_ARTIFACTORY_TOKEN:
        required: true
      SCRIBE_CLIENT_SECRET:
        required: true
      SLACK_WEBHOOK_URL:
        required: true
    inputs:
      SCRIBE_URL:
        type: string
        required: true
        default: https://api.dev.scribesecurity.com 
      GITHUB_USER:
        type: string
        required: true
      RELEASE_ARTIFACTORY_USERNAME:
        type: string
        required: true
      ENV:
        type: string
        required: true
        default: dev
      DEBUG:
        type: string
        default: false


jobs:
  e2e-test:
    name: "e2e tests"
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Restore tool cache
        id: tool-cache
        uses: actions/cache@v3
        with:
          path: |
            .tmp
            snapshot
          key: ${{ runner.os }}-tool-${{ hashFiles('Makefile') }}

      - name: Restore go cache
        id: go-cache
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ env.GO_VERSION }}-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.ARTIFACTORY_URL }}
          username: ${{ inputs.RELEASE_ARTIFACTORY_USERNAME }}
          password: ${{ secrets.RELEASE_ARTIFACTORY_TOKEN }}

      - name: Set Registry secret
        run: |
          SECRET=$(cat ~/.docker/config.json | base64 | tr -d '\n')
          echo "::add-mask::$SECRET"
          echo "IMAGE_PULL_SECRET=$SECRET" >> $GITHUB_ENV

      - name: Configure git for private modules
        env:
          TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}
        run: git config --global url."https://${{ inputs.GITHUB_USER }}:${TOKEN}@github.com".insteadOf "https://github.com"

      - name: Bootstrap
        if: steps.tool-cache.outputs.cache-hit != 'true' || steps.go-cache.outputs.cache-hit != 'true'
        run: make bootstrap
        
      - name: Build binary
        # if: steps.tool-cache.outputs.cache-hit != 'true'
        run: make binary

      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.9.0

      - name: E2E scribe tests
        run: make e2e_scribe
        env:
          SCRIBE_URL: ${{ inputs.SCRIBE_URL }}
          SCRIBE_CLIENT_SECRET: ${{ secrets.SCRIBE_CLIENT_SECRET }}
          IMAGE_PULL_SECRET: ${{ env.IMAGE_PULL_SECRET }}
          DEBUG: ${{ inputs.DEBUG }}

      - name: E2E OCI tests
        run: make e2e_oci
        env:
          SCRIBE_OCI_REPO: ${{ env.SCRIBE_OCI_REPO }}
          IMAGE_PULL_SECRET: ${{ env.IMAGE_PULL_SECRET }}
          DEBUG: ${{ inputs.DEBUG }}