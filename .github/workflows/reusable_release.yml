name: .release

env:
  GOPRIVATE: "github.com/scribe-security/*"
  ARTIFACTORY_URL: "https://scribesecuriy.jfrog.io"
  GO_VERSION: "1.20"

on:
  workflow_call:
    secrets:
      RELEASE_GITHUB_TOKEN:
        required: true
      RELEASE_ARTIFACTORY_TOKEN:
        required: true   
    inputs:
      GITHUB_USER:
        type: string
        required: true
      RELEASE_ARTIFACTORY_USERNAME:
        type: string
        required: true
      IS_DEV:
        type: string

jobs:
  release:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    steps:
    
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Restore tool cache
        id: tool-cache
        uses: actions/cache@v3
        with:
          path: |
            .tmp
            snapshot
          key: ${{ runner.os }}-tool-${{ hashFiles('Makefile') }}

      - name: Restore go cache
        id: go-cache
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ env.GO_VERSION }}-
            
      - name: Configure git for private modules
        if: steps.go-cache.outputs.cache-hit != 'true'
        env:
          TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}
        run: git config --global url."https://${{ inputs.GITHUB_USER }}:${TOKEN}@github.com".insteadOf "https://github.com"

      - name: Bootstrap
        if: steps.tool-cache.outputs.cache-hit != 'true' || steps.go-cache.outputs.cache-hit != 'true'
        run: make bootstrap

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.ARTIFACTORY_URL }}
          username: ${{ inputs.RELEASE_ARTIFACTORY_USERNAME }}
          password: ${{ secrets.RELEASE_ARTIFACTORY_TOKEN }}
      
      - name: Build & publish release artifacts
        run: make release
        env:
          ARTIFACTORY_GENERIC_USERNAME:  ${{ inputs.RELEASE_ARTIFACTORY_USERNAME }}
          ARTIFACTORY_GENERIC_SECRET: ${{ secrets.RELEASE_ARTIFACTORY_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}
          IsDev: ${{ inputs.IS_DEV }}

      - uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: dist/**/*