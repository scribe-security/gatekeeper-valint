apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: k8sexternaldatavalint
  annotations:
    metadata.gatekeeper.sh/title: "Enforce Supply Chain Policies with Valint"
    description: >-
      Ensures that container images adhere to specified supply chain policies by integrating with Valint for verification. 
      Violations will be reported if images do not comply with the defined policies.
spec:
  crd:
    spec:
      names:
        kind: K8sExternalDataValint
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package k8sexternaldata

        violation[{"msg": msg}] {
          # build a list of keys containing images 
          images := [img | img = input.review.object.spec.template.spec.containers[_].image]
          
          review_encoded := base64.encode(json.marshal(input.review))
          review_encoded_prefixed := concat("", ["review:", review_encoded])
          keys := array.concat(images,[review_encoded_prefixed])
                    
          # send external data request
          response := external_data({"provider": "gatekeeper-valint", "keys": keys})

          response_with_error(response)

          msg := sprintf("image not accepted: %v", [response])
        }

        response_with_error(response) {
          count(response.system_error) > 0
        }
