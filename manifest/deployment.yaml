apiVersion: v1
kind: Namespace
metadata:
  name: gatekeeper-valint
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: valint-config
  namespace: gatekeeper-valint
data:
  config.yaml: |
    logger:
      level: debug
    cache:
      enable: false
    verify:
      # -- Evidence format
      input-format: attest
    attest:
      # -- Signature verification type
      default: sigstore
      cocosign:
        storer:
          OCI:
            # -- OCI evidence enable
            enable: true
            # -- OCI evidence repo location 
            repo: ""
---
apiVersion: v1
kind: Secret
metadata:
  name: scribe-cred-secret
  namespace: gatekeeper-valint
stringData:
  scribe_client_id: "<your client secret>"
  scribe_client_secret: "<your client secret>"
  scribe_enable: "false"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gatekeeper-valint
  namespace: gatekeeper-valint
spec:
  replicas: 1
  selector:
    matchLabels:
      run: gatekeeper-valint
  template:
    metadata:
      labels:
        run: gatekeeper-valint
    spec:
      containers:
      - image: scribesecuriy.jfrog.io/scribe-docker-public-local/gatekeeper-valint:dev
        imagePullPolicy: IfNotPresent
        name: gatekeeper-valint
        ports:
        - containerPort: 8090
          protocol: TCP
        args:
        - "--config=/valint/config.yaml"
        # - --port={{ .Values.port }}
        env:
        - name: SIGSTORE_NO_CACHE
          value: "true"
        - name: DEBUG
          value: "true"
        - name: VALINT_SCRIBE_AUTH_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: scribe-cred-secret
              key: scribe_client_id
        - name: VALINT_SCRIBE_AUTH_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: scribe-cred-secret
              key: scribe_client_secret
        - name: VALINT_SCRIBE_ENABLE
          valueFrom:
            secretKeyRef:
              name: scribe-cred-secret
              key: scribe_enable
        volumeMounts:
        - name: valint-config
          mountPath: /valint
          readOnly: true
      restartPolicy: Always
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
        - name: valint-config
          configMap:
            name: valint-config
